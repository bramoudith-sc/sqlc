// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: test_join.sql

package spanner_features

import (
	"context"
	"database/sql"
)

const testLeftJoin = `-- name: TestLeftJoin :many
SELECT 
    u.id,
    u.name,
    COUNT(p.id) as post_count
FROM users u
LEFT JOIN posts p ON u.id = p.user_id
GROUP BY u.id, u.name;
`

type TestLeftJoinRow struct {
	ID        string
	Name      sql.NullString
	PostCount int64
}

// Test LEFT JOIN with GROUP BY
func (q *Queries) TestLeftJoin(ctx context.Context) ([]TestLeftJoinRow, error) {
	rows, err := q.db.QueryContext(ctx, testLeftJoin)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []TestLeftJoinRow
	for rows.Next() {
		var i TestLeftJoinRow
		if err := rows.Scan(&i.ID, &i.Name, &i.PostCount); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
