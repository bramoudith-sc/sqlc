package spanner

import "strings"

// https://cloud.google.com/spanner/docs/reference/standard-sql/lexical#reserved_keywords
func (p *Parser) IsReservedKeyword(s string) bool {
	switch strings.ToLower(s) {
	// A
	case "all":
	case "and":
	case "any":
	case "array":
	case "as":
	case "asc":
	case "assert_rows_modified":
	case "at":
	// B
	case "between":
	case "by":
	// C
	case "case":
	case "cast":
	case "collate":
	case "contains":
	case "create":
	case "cross":
	case "cube":
	case "current":
	// D
	case "default":
	case "define":
	case "desc":
	case "distinct":
	// E
	case "else":
	case "end":
	case "enum":
	case "escape":
	case "except":
	case "exclude":
	case "exists":
	case "extract":
	// F
	case "false":
	case "fetch":
	case "following":
	case "for":
	case "from":
	case "full":
	// G
	case "group":
	case "grouping":
	case "groups":
	// H
	case "hash":
	case "having":
	// I
	case "if":
	case "ignore":
	case "in":
	case "inner":
	case "intersect":
	case "interval":
	case "into":
	case "is":
	// J
	case "join":
	// L
	case "lateral":
	case "left":
	case "like":
	case "limit":
	case "lookup":
	// M
	case "merge":
	case "natural":
	// N
	case "new":
	case "no":
	case "not":
	case "null":
	case "nulls":
	// O
	case "of":
	case "on":
	case "or":
	case "order":
	case "outer":
	case "over":
	// P
	case "partition":
	case "preceding":
	case "proto":
	// Q
	case "qualify":
	// R
	case "range":
	case "recursive":
	case "respect":
	case "right":
	case "rollup":
	case "rows":
	// S
	case "select":
	case "set":
	case "some":
	case "struct":
	case "tablesample":
	// T
	case "then":
	case "to":
	case "treat":
	case "true":
	// U
	case "unbounded":
	case "union":
	case "unnest":
	case "using":
	// V
	case "value":
	case "values":
	// W
	case "when":
	case "where":
	case "window":
	case "with":
	case "within":
	// Additional keywords that might be reserved
	case "delete":
	case "insert":
	case "update":
	case "drop":
	case "alter":
	case "table":
	case "index":
	case "view":
	case "function":
	case "procedure":
	case "trigger":
	default:
		return false
	}
	return true
}